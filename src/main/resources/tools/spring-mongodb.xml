<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
		                http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
		                http://www.springframework.org/schema/context 
				        http://www.springframework.org/schema/context/spring-context-4.0.xsd 
		                http://www.springframework.org/schema/data/mongo  
		                http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">
	<!-- 简单配置版 -->
	<!--  
	<mongo:mongo host="localhost" port="27017" />

	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongo" />
		<constructor-arg name="databaseName" value="test" />
	</bean>
	-->
	
	<!-- 加载mongodb的属性配置文件 -->
	<context:property-placeholder location="classpath:config/mongodb.properties" /> 
	
    <!-- 配置mongodb连接池 ,创建mongoClient实例，1.7版本+不支持mongo,支持mongo-client,options为client-options -->
    <!-- Usage of 'UserCredentials' with 'MongoClient' is no longer supported，如果需要验证,mongo-client需要加这句: credentials="${mongo.username}:${mongo.password}@${mongo.defaultDbName}" -->
	<mongo:mongo-client id="mongoClient" host="${mongo.host}" port="${mongo.port}">
        <mongo:client-options
                connections-per-host="${mongo.connectionsPerHost}"
                min-connections-per-host="${mongo.minConnectionsPerHost}"
                threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
                connect-timeout="${mongo.connectTimeout}"
                max-wait-time="${mongo.maxWaitTime}"
                socket-keep-alive="${mongo.socketKeepAlive}"
                socket-timeout="${mongo.socketTimeout}"
                description="${mongo.description}"
                max-connection-idle-time="${mongo.maxConnectionIdleTime}"
                max-connection-life-time="${mongo.maxConnectionLifeTime}"
                heartbeat-socket-timeout="${mongo.heartbeatSocketTimeout}"
                heartbeat-connect-timeout="${mongo.heartbeatConnectTimeout}"
                min-heartbeat-frequency="${mongo.minHeartbeatFrequency}"
                heartbeat-frequency="${mongo.heartbeatFrequency}"
        />
	</mongo:mongo-client>
	
	<mongo:db-factory dbname="${mongo.defaultDbName}" mongo-ref="mongoClient"/>
	
	<!-- Spring提供的mongodb操作模板-->
    <mongo:template id="mongoTemplate" db-factory-ref="mongoDbFactory" write-concern="NORMAL"/>
    <!--
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg ref="mongoDbFactory" />
    </bean>
    -->
	
	<!-- 映射转换器，扫描back-package目录下的文件，根据注释，把它们作为mongodb的一个collection的映射 -->
	<mongo:mapping-converter id="converter" db-factory-ref="mongoDbFactory" base-package="com.web.entity" /> 

	<!-- MongoDB GridFS Template 支持，操作mongodb存放的文件 -->
    <mongo:gridFsTemplate id="gridFsTemplcate" db-factory-ref="mongoDbFactory" converter-ref="converter" />
    <!-- 
	<bean class="org.springframework.data.mongodb.gridfs.GridFsTemplate">
	  <constructor-arg ref="mongoDbFactory" />
	  <constructor-arg ref="converter" />
	</bean>
	 -->
	 
	<!-- mongodb bean的仓库目录，会自动扫描扩展了MongoRepository接口的接口进行注入 -->
	<mongo:repositories base-package="com.web.tools.mongodb.dao.impl" />

</beans>